#!/usr/bin/python3
import time
import os
import sys
import math

arglib={
"__std__": {
	"func": "help()",
},
"--help": {
    "func": "help()",
	"follow": False,
    "subops": {},
},
"--file": {
    "func": "run(True, args[argcount+1])",
	"follow": True,
    "subops": {},
},
}

def help():
	print("Yabe - Yet another benchmark\nUsage: "+sys.argv[0]+" <option> <string>\n   Options:")
	print("      --file <filename>  : Saves test results to a file.")
	print("      --help             : Prints this help text.")

def argbranch(args, arglib, argcount):
    if len(args) == argcount:
        exec(arglib["__std__"]["func"])
    elif args[argcount] not in arglib:
        print("Option '%s' not found!"%(args[argcount]))
        exit(1)
    elif arglib[args[argcount]]["follow"] and len(args) == argcount+1:
        print("Required option missing")
        exit(1)
    elif len(args) == argcount+1 or arglib[args[argcount]]["subops"] == {}:
        exec(arglib[args[argcount]]["func"])
    else:
        argbranch(args, arglib[args[argcount]]["subops"], argcount+1)

def run(save=False, file_out=""):
	print(":: Running singlecore benchmark...")
	width, height = os.get_terminal_size()
	x=time.time()
	v=2
	max=29
	for i in range(30):
		v=v**2
		width, height = os.get_terminal_size()
		string=' Running singlecore benchmark'+200*' '
		pl=round(math.log(width/57 ,1.01644658))
		print('\r('+(2-len(str(i)))*' '+str(i)+'/'+str(max)+')'+string[:width-14-pl]+'['+round((i/max)*pl)*'#'+round((pl-((i/max)*pl)))*'-'+'] '+(3-len(str(round((i/max)*100))))*' '+str(round((i/max)*100))+'%', end='', flush=True)
	y=time.time()
	print(":: Done!")
	print(" Benchmark completed in "+str(y-x)+" seconds!")
	if save:
		import datetime
		file=open(file_out, "a")
		file.write(os.uname()[1]+' '+str(datetime.datetime.now())+' '+str(y-x)+" seconds\n")
		file.close
		print(" Results written to file", file_out)

try:
	argbranch(sys.argv, arglib, 1)
except KeyboardInterrupt:
	print("KeyboardInterrupt")
